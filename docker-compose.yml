version: '3.8'

services:
  # Nginx edge gateway - entry point for all traffic
  edge:
    image: nginx:alpine
    container_name: monetizeplus-edge
    ports:
      - "8080:8080"
    volumes:
      - ./edge/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - edge-worker
    networks:
      - monetizeplus-network

  # Edge worker - bot detection and routing logic
  edge-worker:
    build: ./edge-worker
    container_name: monetizeplus-edge-worker
    environment:
      - NODE_ENV=development
      - LICENSING_API_URL=http://licensing-api:3000
      - PUBLISHER_A_URL=http://publisher-a:8081
      - PUBLISHER_B_URL=http://publisher-b:8082
      - REDIS_URL=redis://redis:6379
    depends_on:
      - licensing-api
      - redis
    networks:
      - monetizeplus-network

  # Licensing API - authentication, tokens, metering, policies
  licensing-api:
    build: ./licensing-api
    container_name: monetizeplus-licensing-api
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DATABASE_URL=postgresql://monetizeplus:monetizeplus123@postgres:5432/monetizeplus
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-secret-key-change-in-production
      - JWT_ISSUER=gatehouse-licensing
      - JWT_AUDIENCE=gatehouse-edge
    depends_on:
      - postgres
      - redis
    networks:
      - monetizeplus-network

  # Publisher A - mock content site
  publisher-a:
    build: ./publisher-a
    container_name: monetizeplus-publisher-a
    networks:
      - monetizeplus-network

  # Publisher B - mock content site
  publisher-b:
    build: ./publisher-b
    container_name: monetizeplus-publisher-b
    networks:
      - monetizeplus-network

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: monetizeplus-postgres
    environment:
      - POSTGRES_DB=monetizeplus
      - POSTGRES_USER=monetizeplus
      - POSTGRES_PASSWORD=monetizeplus123
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - monetizeplus-network

  # Redis for rate limiting and token cache
  redis:
    image: redis:7-alpine
    container_name: monetizeplus-redis
    ports:
      - "6379:6379"
    networks:
      - monetizeplus-network

  # Publisher Dashboard - UI for managing policies and viewing analytics
  publisher-dashboard:
    build: ./publisher-dashboard
    container_name: monetizeplus-publisher-dashboard
    ports:
      - "5173:5173"
    depends_on:
      - licensing-api
    networks:
      - monetizeplus-network

  # URL-to-Markdown Parser - grounding API for search/copilot systems
  url-parser:
    build: ./Simple Parser/url-to-markdown
    container_name: monetizeplus-url-parser
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=production
      - PORT=4000
      - CORS_ORIGINS=http://localhost:5173
    networks:
      - monetizeplus-network

  # Negotiation Agent - AI-to-AI autonomous license negotiation
  negotiation-agent:
    build: ./negotiation-agent
    container_name: monetizeplus-negotiation-agent
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=production
      - PORT=3003
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=monetizeplus
      - POSTGRES_USER=monetizeplus
      - POSTGRES_PASSWORD=monetizeplus123
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
      - LOG_LEVEL=info
      - START_MCP=false
    depends_on:
      - postgres
      - redis
      - licensing-api
    networks:
      - monetizeplus-network

networks:
  monetizeplus-network:
    driver: bridge

volumes:
  postgres-data:
