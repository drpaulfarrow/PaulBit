version: "3.8"

services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: monetizeplus
      POSTGRES_PASSWORD: monetizeplus123
      POSTGRES_DB: monetizeplus
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U monetizeplus"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: always

  redis:
    image: redis:7-alpine
    restart: always

  licensing-api:
    build:
      context: ./licensing-api
      dockerfile: Dockerfile
    image: paulandrewfarrow/monetizeplus-licensing-api:latest
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: postgres://monetizeplus:monetizeplus123@postgres:5432/monetizeplus
      REDIS_URL: redis://redis:6379
      JWT_SECRET: super-secret-change-in-production
      JWT_ISSUER: monetizeplus
      JWT_AUDIENCE: monetizeplus-edge
    ports:
      - "3000:3000"

  edge-worker:
    image: paulandrewfarrow/monetizeplus-edge-worker:latest
    depends_on:
      - licensing-api
      - redis
    environment:
      NODE_ENV: production
      LICENSING_API_URL: http://licensing-api:3000
      REDIS_URL: redis://redis:6379
    ports:
      - "3001:3001"

  negotiation-agent:
    build:
      context: ./negotiation-agent
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - redis
      - licensing-api
    environment:
      NODE_ENV: production
      PORT: 3003
      DATABASE_URL: postgres://monetizeplus:monetizeplus123@postgres:5432/monetizeplus
      REDIS_URL: redis://redis:6379
      LICENSING_API_URL: http://licensing-api:3000
    ports:
      - "3003:3003"
    restart: always

  publisher-dashboard:
    build:
      context: ./publisher-dashboard
      dockerfile: Dockerfile
      args:
        NGINX_CONFIG: nginx.conf
    image: paulandrewfarrow/monetizeplus-publisher-dashboard:latest
    depends_on:
      - licensing-api
      - edge-worker
    environment:
      NODE_ENV: production
      API_URL: http://licensing-api:3000
      EDGE_URL: http://edge-worker:3001
    ports:
      - "80:80"

volumes:
  pgdata:
